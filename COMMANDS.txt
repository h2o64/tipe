(* Vector Field - Smooth *)
Orientation.vector_field Orientation.getAngles Testing.test_image 16 true;;
Orientation.vector_field Orientation.getAngles_vector Testing.test_image 16 true;;

(* Vector Field *)
Orientation.vector_field Orientation.getAngles Testing.test_image 16 false;;
Orientation.vector_field Orientation.getAngles_vector Testing.test_image 16 false;;

(* Poincare *)
Poincare.display_sp Testing.test_image 16 48 Poincare.getAngleBetween;;
Poincare.display_sp Testing.test_image 16 48 Poincare.getAngleBetween_bis;;

(* Frequency *)
let grey_test = Images.imageToGreyScale Testing.test_image;;
Frequency.plot_signature 200 200 grey_test.matrix 16;;
Frequency.interactive_signature Testing.test_image 16;;

(* Segmentation - fingerprint2 *)
let grey_test = Images.imageToGreyScale Testing.test_image;;
let seg = Image_Processing.segmentation grey_test.matrix 12 400.;;
Testing.displayAnyMatrix seg;;

(* Normalisation *)
let grey_test = Images.imageToGreyScale Testing.test_image;;
let norm = Image_Processing.normalisation grey_test.matrix;;
Testing.displayAnyMatrix norm;;

(* Gabor - Contextual Filtering *)
let grey_test = Images.imageToGreyScale Testing.test_image;;
let gabor = Image_Processing.do_everything grey_test.matrix 12 400. false true;;

(* Binarization *)
let grey_test = Images.imageToGreyScale Testing.test_image;;
let gabor = Image_Processing.do_everything grey_test.matrix 12 400. false true;;
let bin = Image_Processing.binarization gabor 12;;
Testing.displayBin bin;;

(* Circle Test - Image Movement Difference *)
let circle_right = Images.import_image "Images/circle_right.png";;
let circle_left = Images.import_image "Images/circle_left.png";;
let grey_right = Images.imageToGreyScale circle_right;;
let grey_left = Images.imageToGreyScale circle_left;;
let bin_right = Testing.simpleBinarize grey_right.matrix;;
let bin_left = Testing.simpleBinarize grey_left.matrix;;
Image_Processing.img_mvt bin_right bin_left;;
Testing.displayBin bin_right;;

(* Thining - Test *)
let test_thin = Images.import_image "Images/guo-hall-thinning-src-img.jpg";;
let grey_thin = Images.imageToGreyScale test_thin;;
let bin_thin = Image_Processing.binarization grey_thin.matrix 26;;
Testing.displayBin bin_thin;;
let rev_bin = Image_Processing.reverseBin bin_thin;;
Testing.displayBin rev_bin;;
let thin = Image_Processing.thinning rev_bin;;
Testing.displayBin thin;;

(* Thining *)
let grey_test = Images.imageToGreyScale Testing.test_image;;
let gabor = Image_Processing.do_everything grey_test.matrix 12 400. false true;;
let bin = Image_Processing.binarization gabor 12;;
let thin = Image_Processing.thinning bin;;
Testing.displayBin thin;;

/!\ Use Otso's threshold method
